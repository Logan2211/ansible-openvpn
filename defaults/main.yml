---
# Copyright 2017, Logan Vig <logan2211@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Set the package install state for distribution packages
# Options are 'present' and 'latest'
openvpn_package_state: "latest"

# OpenVPN instance allows multiple OpenVPN instances to be collocated on the
# same host
# openvpn_instance: openvpn

# Conf path should normally not be changed
openvpn_config_path: /etc/openvpn

openvpn_config_file: "{{ openvpn_config_path }}/openvpn{{ ('-' ~ openvpn_instance) if openvpn_instance is defined else '' }}.conf"
openvpn_systemd_unit: "openvpn@openvpn{{ ('-' ~ openvpn_instance) if openvpn_instance is defined else '' }}.service"

# Key storage path
openvpn_key_path: /var/lib/openvpn

openvpn_protocol: udp
openvpn_port: 1194
# IPv6 listen can be yes, no, or exclusive
# 'exclusive' means listen on ipv6 only.
openvpn_listen_ipv6: yes

# OpenVPN ansible inventory groups
openvpn_servers_group: "openvpn_all"
openvpn_clients_group: "openvpn_clients"

openvpn_status_file: "{{ openvpn_config_path }}/{{ (openvpn_instance ~ '-') if openvpn_instance is defined else '' }}status.log"

openvpn_rsa_bits: 2048

# Duration to validate certs for
openvpn_cert_days: 3650
openvpn_ca_cert_days: "{{ openvpn_cert_days }}"
openvpn_crl_days: "{{ openvpn_cert_days }}"
openvpn_server_cert_days: "{{ openvpn_cert_days }}"
openvpn_client_cert_days: "{{ openvpn_cert_days }}"

# Optional CA cert can be provided. A CA cert will be generated if it is not
# provided.
# openvpn_ca_cert:
#   cert: "<certificate>"
#   key: "<key>"

# Optional TLS auth key for OpenVPN. One will be generated if not provided.
# https://community.openvpn.net/openvpn/wiki/Hardening#Useof--tls-auth
# openvpn_tls_auth_key: <key>

openvpn_ipv4_network: 192.168.250.0/24

# Verify the CN of the client
openvpn_verify_cn_enabled: no
openvpn_verify_cn_client: "OpenVPN-Client-{{inventory_hostname}} name-prefix"
openvpn_verify_cn_server: "OpenVPN-Server-{{inventory_hostname}} name"

# Configure the OpenVPN management socket
openvpn_management_enabled: yes
openvpn_management_sock: /var/run/openvpn/management.sock
openvpn_management_bind: "{{ openvpn_management_sock }} unix"
openvpn_management_user: root

# A list of client certs to configure. ex:
# openvpn_clients:
#   - client1
#   - name: client2
#     revoke: yes
#   - name: client3
#     cert: <pregenerated certificate>
#     key: <pregenerated key> (not stored on the server, only used to generate the client config)
openvpn_clients: []

# Enables generation of .ovpn client configurations for managed clients
openvpn_clients_config_generate: yes
openvpn_clients_config_path: "{{ openvpn_key_path }}"

### Configurations are generated using the following override precedence:
### For Servers:
###   openvpn_base_config -> openvpn_base_config_overrides ->
###   openvpn_server_config -> openvpn_server_config_overrides
### For Clients:
###   openvpn_base_config -> openvpn_base_config_overrides ->
###   openvpn_client_config -> openvpn_client_config_overrides

# Config options that are common between client and server
openvpn_base_config:
  proto: "{{ openvpn_protocol }}"
  user: "{{ openvpn_user }}"
  group: "{{ openvpn_group }}"
  dev: tun
  tls-version-min: 1.2
  auth: SHA256
  cipher: AES-256-CBC
  comp-lzo: ''
  persist-key: ''
  persist-tun: ''
  keepalive: '5 30'
  verb: 3

openvpn_server_config:
  port: "{{ openvpn_port }}"
  ca: "{{ openvpn_key_path }}/ca.crt"
  cert: "{{ openvpn_key_path }}/server.crt"
  key: "{{ openvpn_key_path }}/server.key"
  dh: "{{ openvpn_key_path }}/dh.pem"
  tls-auth: "{{ openvpn_key_path }}/tls-auth.key 0"
  crl-verify: "{{ openvpn_key_path }}/ca.crl"
  tls-server: ''
  server: "{{ openvpn_ipv4_network | ipaddr('network') }} {{ openvpn_ipv4_network | ipaddr('netmask') }}"
  status: "{{ openvpn_status_file }}"
  verify-x509-name: "{{ openvpn_verify_cn_client if (openvpn_verify_cn_enabled | bool) else [] }}"
  remote-cert-tls: client
  management: "{{ openvpn_management_bind if (openvpn_management_enabled | bool) else [] }}"
  management-client-user: "{{ openvpn_management_user if (openvpn_management_enabled | bool) else [] }}"

openvpn_client_config:
  client: ''
  remote: "{{ ansible_host }} {{ openvpn_port }}"
  remote-cert-tls: server
  resolv-retry: infinite
  nobind: ''
  key-direction: 1
  verify-x509-name: "{{ openvpn_verify_cn_server if (openvpn_verify_cn_enabled | bool) else [] }}"

# Configure settings in this dict to override the base configuration.
# NOTE(logan): An empty list ie. [] is excluded from the config.
# NOTE(logan): An empty string is outputted as a key-only var with no
#              parameter in the config.
openvpn_base_config_overrides: {}
openvpn_server_config_overrides: {}
openvpn_client_config_overrides: {}
